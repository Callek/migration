version: 0
metadata:
  name: "taskcluster-migration"
  description: "Automation for taskcluster/migration"
  owner: "{{ event.head.user.email }}"
  source: "{{ event.head.repo.url }}"
tasks:
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    extra:
      github:
        env: true
        events:
          - pull_request.opened
          - pull_request.reopened
          - pull_request.synchronize
    payload:
      maxRunTime: 3600
      image: "djmitche/tc-migration:1.0"
      artifacts:
        "public/output":
          type: directory
          path: "/migration/output"
      command:
        - "/bin/bash"
        - "--login"
        - "-c"
        - "git clone $GITHUB_HEAD_REPO_URL && cd migration && git checkout $GITHUB_HEAD_BRANCH && pip install -e . && echo 'RUNNING' && python main.py"
    metadata:
      name: "taskcluster-docs check"
      description: "Run `gulp check` to verify docs well-formedness`"
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    routes:
      - index.project.taskcluster.migration.latest
    extra:
      github:
        env: true
        events:
          - push
        branches:
          - master
          - hook-test
    payload:
      maxRunTime: 3600
      image: "djmitche/tc-migration:1.0"
      artifacts:
        "public/output":
          type: directory
          path: "/migration/output"
      command:
        - "/bin/bash"
        - "--login"
        - "-c"
        - "git clone $GITHUB_HEAD_REPO_URL && cd migration && git checkout $GITHUB_HEAD_BRANCH && pip install -e . && echo 'RUNNING' && python main.py"
    metadata:
      name: "migrate graph redrawing"
      description: "Redraw the migration work graph"
      owner: "{{ event.head.user.email }}"
      source: "{{ event.head.repo.url }}"
